@page "/publishers/edit/{Id:int}"
@using BusinessLayer;
@using ServiceLayer;
@inject PublisherManager publisherManager;
@inject NavigationManager navigationManager;
@inject ErrorModel errorModel;

<h3>Edit</h3>

<h4>Publisher</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm Model="@Model" OnValidSubmit="OnUpdated">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label class="control-label"></label>
                <InputText @bind-Value="Model.Name" class="form-control" />
                <ValidationMessage For=@( () => Model.Name) />
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>

            <label id="error" class="text-danger">@errorModel.Description</label>
        </EditForm>
    </div>
</div>

<div>
    <a href="publishers">Back to List</a>
</div>

@code
{
    Publisher Model = new();

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Model = await publisherManager.ReadAsync(Id, false, false);
    }

    async Task OnUpdated()
    {
        try
        {
            await publisherManager.UpdateAsync(Model);
            navigationManager.NavigateTo("publishers");
        }
        catch (Exception ex)
        {
            errorModel.Code = "DB";
            errorModel.Description = ex.InnerException != null ? ex.InnerException.Message : ex.Message;
        }
    }
}
