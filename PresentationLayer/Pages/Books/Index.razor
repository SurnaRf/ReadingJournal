@page "/books"
@using BusinessLayer;
@using ServiceLayer;
@inject BookManager bookManager;
@inject NavigationManager navigationManager;

<h3>Index</h3>

<p>
    <a href="books/create">Create New</a>
</p>


<table class="table">
    <thead>
        <tr>
            <th>
                Title
            </th>
            <th>
                Description
            </th>
            <th>
               Edition
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Model is null)
        {
            <tr>Loading ...</tr>
        }
        else
        {
            foreach (var item in Model)
            {
                <tr>
                    <td>
                        @item.Title
                    </td>
                    <td>
                        @item.Description
                    </td>                   

                    <td>
                        @item.Edition.Publisher
                    </td>
                    <td>                        
                        <a href="books/edit/@item.ISBN">Edit</a> |
                        <a href="books/details/@item.ISBN">Details</a> |
                        <a href="books/delete/@item.ISBN">Delete</a>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>


@code
{
    ICollection<Book> Model;

    protected override async Task OnInitializedAsync()
    {
        await LoadBooks();
    }

    async Task LoadBooks()
    {
        Model = await bookManager.ReadAllAsync(true, false);
    }
  
    async Task OnDelete(string isbn)
    {
        try
        {
            await bookManager.DeleteAsync(isbn);
            await LoadBooks();
        }
        catch (Exception)
        {
            throw;
        }
    }

}
