@page "/books/details/{Key}"
@using BusinessLayer;
@using ServiceLayer;
@inject BookManager bookManager;
@attribute [Authorize(Roles = "Administrator")]

<h3>Details</h3>

<div>
    <h4>Book</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            Title
        </dt>
        <dd class="col-sm-10">
            @Model.Title
        </dd>
        <dt class="col-sm-2">
            Pages
        </dt>
        <dd class="col-sm-10">
            @Model.Description
        </dd>
        <dt class="col-sm-2">
            Genres
        </dt>
        <dd class="col-sm-10">
            @string.Join(", ", Model.Genres.Select(g => g.Name))
        </dd>
        <dt class="col-sm-2">
            Authors
        </dt>
        <dd class="col-sm-10">
            @string.Join(", ", Model.Authors.Select(a => a.FirstName + " " + a.LastName))
        </dd>
        <dt class="col-sm-2">
            Shelves
        </dt>
        <dd class="col-sm-10">
            @string.Join(", ", Model.Shelves.Select(sh => sh.Name))
        </dd>
        <dt class="col-sm-2">
            Editions
        </dt>
        <dd class="col-sm-10">
            @string.Join(", ", Model.Editions.Select(g => g.Id))
        </dd>
    </dl>
</div>
<div>
    <a href="books/edit/@Model.Key">Edit</a> |
    <a href="books">Back to List</a>
</div>

@code
{
    Book Model = new();

    [Parameter]
    public string Key { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Model = await bookManager.ReadAsync(Key, true);
    }

}
