@*@page "/shelves/details/{Id:int}/rate/{BookId:int}"
@using BusinessLayer
@using ServiceLayer
@inject ShelfManager shelfManager
@inject UserManager userManager
@inject NavigationManager navigationManager

<h3>Rate Book</h3>

@if (Book != null)
{
    <div>
        <h4>@Book.Title</h4>
        <p>@Book.Description</p>
        <hr />

        <form @onsubmit="RateBookAsync">
            <label for="rating">Rating (1-5):</label>
            <input type="number" id="rating" name="rating" min="1" max="5" @bind="@Rating" />
            <button type="submit">Submit Rating</button>
        </form>
    </div>
}
else
{
    <p>Book not found.</p>
}

<div>
    <a href="shelves/details/@Id">Back to Shelf Details</a>
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    [Parameter]
    public int BookId { get; set; }

    private Book Book { get; set; }
    private int Rating { get; set; } = 1;

    protected override async Task OnInitializedAsync()
    {
        Book = await shelfManager.GetBookByIdAsync(BookId);
    }

    private async Task RateBookAsync()
    {
        if (Book != null)
        {
            // Update the book rating within the user's shelf
            var userId = (await userManager.GetUserAsync()).Id;
            await shelfManager.RateBookAsync(userId, BookId, Rating);

            // Redirect back to shelf details page
            navigationManager.NavigateTo($"/shelves/details/{Id}");
        }
    }
}
*@