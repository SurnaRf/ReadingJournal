@page "/user/create"
@using ServiceLayer;
@using BusinessLayer;
@using Services;
@using Microsoft.Extensions.Logging;
@using Microsoft.AspNetCore.Components.Forms;
@inject UserManager userManager;
@inject ErrorModel errorModel;
@inject ILogger<User> logger;
@inject NavigationManager navigationManager;

<h3>Register</h3>

<EditForm Model="@model" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <div class="container">
        <div class="form-row">
            <div class="col-md-4">
                <label for="name">Username</label>
                <InputText id="name" class="form-control" @bind-Value="model.UserName" />
            </div>
            <div class="col-md-4">
                <label for="password">Password</label>
                <InputText class="form-control" id="password" type="password" @bind-Value="model.Password" />
            </div>
            <div class="col-md-4">
                <label for="email">Email</label>
                <InputText id="email" class="form-control" @bind-Value="model.Email"></InputText>
            </div>
        </div>
        <div class="form-row">
            <div class="col-md-4">
                <label for="name">First Name</label>
                <InputText id="name" class="form-control" @bind-Value="model.FirstName"></InputText>
            </div>
            <div class="col-md-4">
                <label for="name">Last Name</label>
                <InputText id="name" class="form-control" @bind-Value="model.LastName"></InputText>
            </div>
            <div class="col-md-4">
                <label for="age">Age</label>
                <InputNumber id="age" class="form-control" TValue="int?" @bind-Value="model.Age"></InputNumber>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="md-1">
                <button type="submit" class="btn">Create</button>
            </div>
        </div>
        <div class="row">
            <label id="error" class="col-md-4 text-danger">@errorModel.Description</label>
        </div>
    </div>
</EditForm>

@code
{
    private User model = new();
    private ICollection<Role> roles = new List<Role>(){Role.Administrator, Role.User, Role.Unspecified};

    protected override Task OnInitializedAsync()
    {
        return base.OnInitializedAsync();        
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            await userManager.CreateUserAsync
            (model.UserName, model.Password, model.Email, model.FirstName, model.LastName, Role.User, (int)model.Age);

            logger.Log(LogLevel.Information, "User created successfully!");

            navigationManager.NavigateTo("/", false);
        }
        catch (Exception ex) 
        {
            errorModel.Code = "DB";
            errorModel.Description = ex.Message;
            logger.Log(LogLevel.Error, ex.Message);
        }
    }

}

